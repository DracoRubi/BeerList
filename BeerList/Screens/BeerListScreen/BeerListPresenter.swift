//
//  BeerListPresenter.swift
//  BeerList
//
//  Created by Roberto Herranz on 21/9/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class BeerListPresenter {

    // MARK: - Private properties -

    private unowned let view: BeerListViewInterface
    private let interactor: BeerListInteractorInterface
    private let wireframe: BeerListWireframeInterface

    // MARK: - Lifecycle -

    init(
        view: BeerListViewInterface,
        interactor: BeerListInteractorInterface,
        wireframe: BeerListWireframeInterface
    ) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
    
    private func getAllBeers() {
        interactor.getBeers(success: { [weak self] beerList in
            self?.view.initializeBeerData(withData: beerList)
        }, failure: { [weak self] error in
            self?.handleError(error: error)
        })
    }

    private func handleError(error: Error) {
        print("There was an error getting the beers! \n \(error)")
    }
}

// MARK: - Extensions -

extension BeerListPresenter: BeerListPresenterInterface {
    func onViewDidAppear() {
        getAllBeers()
    }

    func onSearchTextUpdated(text: String) {
        if !text.isEmpty {
            interactor.getBeers(withParameters: [BeerQueryParameters.name: text], success: { [weak self] beerList in
                self?.view.initializeBeerData(withData: beerList)
            }, failure: { [weak self] error in
                self?.handleError(error: error)
            })
        } else {
            getAllBeers()
        }
    }
}
