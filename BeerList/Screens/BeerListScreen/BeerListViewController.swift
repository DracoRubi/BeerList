//
//  BeerListViewController.swift
//  BeerList
//
//  Created by Roberto Herranz on 21/9/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class BeerListViewController: UIViewController {
    
    // MARK: - IBOutlets -

    @IBOutlet weak var tableView: UITableView!

    // MARK: - Public properties -

    var presenter: BeerListPresenterInterface!
    
    // MARK: - Private properties -

    private var beerList: [BeerEntity] = []
    private var searchController: UISearchController
    
    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        
        tableView.delegate = self
        tableView.dataSource = self
        tableView.register(BeerCell.self, forCellReuseIdentifier: BeerCell.identifier)
    }

    override func viewWillAppear(_ animated: Bool) {
        DataSource().getAllBeers(success: { list in
            DispatchQueue.main.async {
                self.beerList = list
                self.tableView.reloadData()
            }
        }, failure: { _ in
            print("Error getting the beers!")
        })
    }

}

// MARK: - Extensions -

extension BeerListViewController: BeerListViewInterface {
}

extension BeerListViewController: UITableViewDelegate {
    
}

extension BeerListViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return beerList.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let cell = tableView.dequeueReusableCell(withIdentifier: BeerCell.identifier) {
            cell.textLabel?.text = beerList[indexPath.row].name
            cell.accessoryType = .disclosureIndicator
            return cell
        } else {
            print("Error reusing cell!")
            return UITableViewCell()
        }
    }
}
